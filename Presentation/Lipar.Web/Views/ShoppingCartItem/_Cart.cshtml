@model IList<ShoppingCartItemModel>
@using Lipar.Entities.Domain.Application.Enums
@{
    Layout = null;
}
@{
    foreach (var shoppingCartItem in Model)
    {
        decimal temp1 = 0;
        decimal temp2 = 0;
        decimal attributePrice = 0;
        var imgUrl = $"../images/site/product-empty.png";
        if (shoppingCartItem.MediaModel != null && shoppingCartItem.MediaModel.MediaId != 0)
        {
            imgUrl = $"../images/uploaded/{shoppingCartItem.MediaModel.MediaId}-{shoppingCartItem.MediaModel.Name}{shoppingCartItem.MediaModel.MimeType}";
        }
        <div class="container mt-3">
            <div class="row">
                <div class="col-md-2">
                    <img src="@imgUrl" class="img-thumbnail" />
                </div>
                <div class="col-md-10">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="float-left">
                                    <h6>@shoppingCartItem.ProductName</h6>
                                    @if (shoppingCartItem.ProductAttributeValues != null && shoppingCartItem.ProductAttributeValues.Count > 0)
                                    {
                                        foreach (var productAttributeValue in shoppingCartItem.ProductAttributeValues)
                                        {
                                            <label class="text-success">@productAttributeValue.ProductAttributeMapping.TextPrompt :</label>
                                            <label> @productAttributeValue.Name</label>
                                            if (productAttributeValue.Price.HasValue && productAttributeValue.Price.Value > 0)
                                            {
                                                attributePrice = productAttributeValue.Price ?? 0;
                                                <label>@string.Format("{0:C0} تومان", productAttributeValue.Price).Replace("$", "")</label>
                                            }
                                        }
                                    }
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="container mt-auto">
                                    <div class="row">
                                        <div class="col-md-7">
                                            <label>قیمت</label>
                                            <label>@string.Format("{0:C0} تومان", shoppingCartItem.ProductPrice).Replace("$", "")</label>
                                            @{
                                                switch (shoppingCartItem.ProductDiscountTypeId)
                                                {
                                                    case (int)DiscountTypeEnum.Amount:
                                                        temp1 = shoppingCartItem.ProductDiscount ?? 0;
                                                        <label class="control-label">
                                                            @T("Product.Field.Discount")
                                                        </label>
                                                        <label class="control-label text-danger">
                                                            @string.Format("{0:C0} تومان", shoppingCartItem.ProductDiscount).Replace("$", "")
                                                        </label>
                                                        break;
                                                    case (int)DiscountTypeEnum.Percentage:
                                                        temp1 = (shoppingCartItem.ProductPrice * (shoppingCartItem.ProductDiscount ?? 0)) / 100;
                                                        <label class="control-label">
                                                            @T("Product.Field.Discount")
                                                        </label>
                                                        <label class="control-label text-danger">
                                                            @string.Format("{0:C0} درصد", shoppingCartItem.ProductDiscount).Replace("$", "")
                                                        </label>
                                                        break;
                                                }
                                            }
                                        </div>
                                        <div class="col-md-5 quantity">
                                            <i class="fa fa-plus" data-href="@Url.RouteUrl("ShoppingCartQuantityPlus",new { id = shoppingCartItem.Id})" style="color:blue;padding:10px"></i>
                                            <label>@shoppingCartItem.Quantity</label>
                                            <i class="fa fa-minus" data-href="@Url.RouteUrl("ShoppingCartQuantityMinus",new { id = shoppingCartItem.Id})" style="color:#ff0000;padding:10px"></i>
                                        </div>
                                        <div class="col-md-12">
                                            <label>@T("Product.Field.Sum")</label>
                                            <label>@string.Format("{0:C0} تومان", (attributePrice + (shoppingCartItem.ProductPrice - (temp1 + temp2)) * shoppingCartItem.Quantity)).Replace("$", "")</label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}
