@model ShoppingCartItemListModel

@using Lipar.Entities.Domain.Application.Enums
@inject Lipar.Services.Application.Contracts.IOrderService _orderService
@{
    Layout = null;
    var orderSetting = _orderService.OrderSettings();
    var shippingCost = Model.AvailableShoppingCartItemModels.Where(s => s.ShippingCost != null).OrderByDescending(s => s.ShippingCost.Priority).Select(s => s.ShippingCost).FirstOrDefault();
    var deliveryDate = Model.AvailableShoppingCartItemModels.Where(s => s.DeliveryDate != null).OrderByDescending(s => s.DeliveryDate.Priority).Select(s => s.DeliveryDate).FirstOrDefault();
}
@{
    foreach (var shoppingCartItem in Model.AvailableShoppingCartItemModels)
    {
        var imgUrl = $"../images/site/product-empty.png";
        if (shoppingCartItem.MediaModel != null && shoppingCartItem.MediaModel.MediaId != Guid.Empty)
        {
            imgUrl = $"../images/uploaded/{shoppingCartItem.MediaModel.MediaId}-{shoppingCartItem.MediaModel.Name}{shoppingCartItem.MediaModel.MimeType}";
        }
        <div class="container mt-3">
            <div class="row">
                <div class="col-md-2">
                    <img src="@imgUrl" class="img-thumbnail" />
                </div>
                <div class="col-md-10">
                    <div class="container">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="float-left">
                                    <h6>@shoppingCartItem.ProductName</h6>
                                    @if (shoppingCartItem.ProductAttributeValues != null && shoppingCartItem.ProductAttributeValues.Count > 0)
                                    {
                                        foreach (var productAttributeValue in shoppingCartItem.ProductAttributeValues)
                                        {
                                            <label class="text-success">@productAttributeValue.ProductAttributeMapping.TextPrompt :</label>
                                            <label> @productAttributeValue.Name</label>
                                            if (productAttributeValue.Price.HasValue && productAttributeValue.Price.Value > 0)
                                            {
                                                <label>@string.Format("{0:#,0} {1}", productAttributeValue.Price,T("Web.Currency").Text)</label>
                                            }
                                        }
                                    }
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="container mt-auto">
                                    <div class="row">
                                        <div class="col-md-7">
                                            <label>قیمت</label>
                                            <label>@string.Format("{0:#,0} {1}", shoppingCartItem.ProductPrice,T("Web.Currency").Text)</label><br />
                                            @{
                                                switch (shoppingCartItem.ProductDiscountTypeId)
                                                {
                                                    case (int)DiscountTypeEnum.Amount:
                                                        <label class="control-label">
                                                            @T("Product.Field.Discount")
                                                        </label>
                                                        <label class="control-label text-danger">
                                                            @string.Format("{0:#,0} {1}", shoppingCartItem.ProductDiscount,T("Web.Currency").Text)
                                                        </label>
                                                        break;
                                                    case (int)DiscountTypeEnum.Percentage:
                                                        <label class="control-label">
                                                            @T("Product.Field.Discount")
                                                        </label>
                                                        <label class="control-label text-danger">
                                                            @string.Format("{0:#,0} درصد", shoppingCartItem.ProductDiscount)
                                                        </label>
                                                        break;
                                                }
                                            }
                                        </div>
                                        <div class="col-md-5 quantity">
                                            <i class="fa fa-plus cart-plus" data-href="@Url.RouteUrl("ShoppingCartQuantityPlus",new { id = shoppingCartItem.Id})"></i>
                                            <label>@shoppingCartItem.Quantity</label>
                                            <i class="fa fa-minus cart-minus" data-href="@Url.RouteUrl("ShoppingCartQuantityMinus",new { id = shoppingCartItem.Id})"></i>
                                            <button class="btn btn-danger remove-shopping-cart" type="button" data-href="@Url.RouteUrl("ShoppingCartRemove",new { id = shoppingCartItem.Id})">حذف از سبد</button>
                                        </div>
                                        <div class="col-md-12">
                                            <label>@T("Product.Field.Sum")</label>
                                            <label>@string.Format("{0:#,0} {1}", shoppingCartItem.ProductPrice,T("Web.Currency").Text)</label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="row mt-2">
        @{
            if (shippingCost != null && shippingCost.Price > 0)
            {
                <div class="col-md-4">
                    <label class="label label-default">@T("Web.ShoppingCartItem.Cart.shippingCost") (@shippingCost.Name) : </label>
                    <label class="label text-danger">@string.Format("{0:#,0} {1}", shippingCost.Price,T("Web.Currency").Text)</label>
                </div>
            }
            else
            {
                if (Model.CartAmount < orderSetting.ShoppingCartRate)
                {

                    <div class="col-md-4">
                        <label class="label label-default">@T("Web.ShoppingCartItem.Cart.shippingCost") </label>
                        <label class="label text-danger">@string.Format("{0:#,0} {1}", orderSetting.ShoppingCartRate,T("Web.Currency").Text)</label>
                    </div>
                }
            }

            <div class="col-md-4">
                <label class="label label-default">@T("Web.ShoppingCartItem.Cart.CartAmount")</label>
                <label class="label text-danger">@string.Format("{0:#,0} {1}", Model.CartAmount,T("Web.Currency").Text)</label>
            </div>

        }
        @if (deliveryDate != null)
        {
            <div class="col-md-4">
                <label class="label label-default">
                    <i class="fa fa-calendar text-success"></i>
                    @T("Web.ShoppingCartItem.Cart.DeliveryDate")
                </label>
                <label class="label text-danger">@deliveryDate.Name</label>
            </div>
        }
    </div>
}
