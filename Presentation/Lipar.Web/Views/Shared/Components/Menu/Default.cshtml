@model Lipar.Web.Models.General.MenuModel
@using Lipar.Core.ReadingTime

<div class="header-upper">
    <div class="header-selectors-wrapper">
        @await Component.InvokeAsync("LanguageSelector")
    </div>
    <div class="header-links-wrapper">
        <div class="header-links">
            <ul>
                @if (Model.UserHeaderLink.IsAuthenticated)
                {
                    <li><a href="@Url.RouteUrl("CustomerInfo")" class="ico-account">@T("Account.MyAccount")@*@Model.CustomerName*@</a></li>
                    <li><a href="@Url.RouteUrl("Logout")" class="ico-logout">@T("Account.Logout")</a></li>
                }
                else
                {
                    var returnUrl = Context.Request.Query.TryGetValue("returnUrl", out var url) && !StringValues.IsNullOrEmpty(url)
                        ? url.ToString()
                        : string.Empty;

                    <li><a href="@Url.RouteUrl("Register")" class="ico-register">@T("Account.Register")</a></li>
                    <li><a href="@Url.RouteUrl("Login")" class="ico-login">@T("Account.Login")</a></li>
                }
            </ul>
        </div>
        
    </div>
</div>
<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <a class="navbar-brand" href="#">اولین سایت</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            @if (Model.StaticPages != null && Model.StaticPages.Count > 0)
            {
                foreach (var staticPage in Model.StaticPages)
                {
                    <li class="nav-item p-1">
                        <a href="@Url.RouteUrl("StaticPageDetail" , new { EntityName = "page" , SeName = CalculateWordsCount.CleanSeoUrl(staticPage.Title)})">@staticPage.Title</a>
                    </li>
                }
            }
            @if (Model.dynamicPages != null && Model.dynamicPages.Count > 0)
            {
                foreach (var dynamicPage in Model.dynamicPages)
                {
                    <li class="nav-item p-1">
                        <a href="@Url.RouteUrl("DynamicPageDetail" , new { EntityName = "page" , SeName = CalculateWordsCount.CleanSeoUrl(dynamicPage.Title)})">@dynamicPage.Title</a>
                    </li>
                }
            }

            <li class="nav-item p-1">
                <a href="@Url.RouteUrl("ContactUs")">@T("Web.Menu.ContactUs")</a>
            </li>
        </ul>
    </div>
</nav>