@model BlogSearchModel

@{
    Html.SetActiveMenuItemSystemName("Blog List");
    ViewBag.PageTitle = T("Admin.Blog.List.Title").Text;
}

<form asp-action="List" asp-controller="Blog" method="post">
    <section class="card">
        <div class="card-header">
            <div class="pull-left" title="@T("Common.Search.Text")">
                <i class="fa fa-search" aria-hidden="true" data-toggle="collapse" href="#blog-list-search"></i>
                <a asp-action="Create"> <i class="fa fa-plus" aria-hidden="true"></i></a>
            </div>
        </div>
        <div class="card-body collapse" id="blog-list-search">
            <div class="row">
                <div class="form-group col-md-6 col-sm-4">
                    <label asp-for="Name" class="control-label">@T("Blog.Field.Name")</label>
                    <input type="text" class="form-control" asp-for="Name">
                </div>
            </div>

            <div class="btn-group-justified float-right">
                <button id="search-blog-list" type="button" class="btn btn-primary">@T("Common.Search.Text")</button>
            </div>
        </div>
    </section>

    <section class="card mt-2">
        <div class="card-header">
            <span class="card-title">@T("Admin.Blog.List.Title")</span>
        </div>
        <div class="card-body">
            @{
                var gridModel = new DataTablesModel
                {
                    Name = "blog-grid",
                    SearchButtonId = "search-blog-list",
                    UrlRead = new DataUrl("List", "Blog", null),
                    Length = Model.PageSize,
                    LengthMenu = Model.AvailablePageSizes,
                    Filters = new List<FilterParameter>()
                                                                        {
                        new FilterParameter(nameof(Model.Name))
                    }
                };

                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(BlogModel.Name))
                {
                    Title = T("Blog.Field.Name").Text
                });

                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(BlogModel.Description))
                {
                    Title = T("Blog.Field.Description").Text
                });

                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(BlogModel.ModifiedDate))
                {
                    Title = T("Blog.Field.ModifiedDate").Text,
                    Render = new RenderDate(),
                    Width = "200"
                });

                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(BlogModel.Id))
                {
                    Title = T("Blog.Field.BlogComments").Text,
                    Render = new RenderCustom("renderColumnComments"),
                    Width = "200"
                });

                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(BlogModel.Id))
                {
                    Title = "",
                    Width = "10",
                    ClassName = LiparColumnClassDefaults.Button,
                    Render = new RenderButtonEdit(new DataUrl("Edit"))
                });
                @await Html.PartialAsync("Table", gridModel)

                <script>
                    function renderColumnComments(data, type, row, meta) {
                        var link = "BlogComments?filterByBlogId=" + data;
                        var title ='@T("Blog.Field.BlogComments")';

                        var countComments = row.ApprovedComments + row.NotApprovedComments;
                        return `<a class='btn btn-primary' href='${link}'>${title} - ${countComments}(${row.NotApprovedComments})</a>`;
                    }
                </script>
            }
        </div>
    </section>
</form>