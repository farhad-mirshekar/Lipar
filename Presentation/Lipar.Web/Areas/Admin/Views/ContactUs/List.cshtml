@model ContactUsSearchModel

@{
    Html.SetActiveMenuItemSystemName("ContactUs List");
    ViewBag.PageTitle = T("Admin.ContactUs.List.Title").Text;
}

<form asp-action="List" asp-controller="ContactUs" method="post">
    <section class="card">
        <div class="card-header">
            <div class="pull-left" title="@T("Common.Search.Text")">
                <i class="fa fa-search" aria-hidden="true" data-toggle="collapse" href="#contactus-list-search"></i>
            </div>
        </div>
        <div class="card-body collapse" id="contactus-list-search">
            <div class="row">
                <div class="form-group col-md-6 col-sm-4">
                    <label asp-for="ContactUsTypeId" class="control-label">@T("ContactUs.Field.ContactUsType")</label>
                    <lipar-select asp-for="ContactUsTypeId" asp-items="Model.AvailableContactUsType" />
                </div>
            </div>

            <div class="btn-group-justified float-right">
                <button id="search-contactus-list" type="button" class="btn btn-primary">@T("Common.Search.Text")</button>
                <button id="search-clear-list" type="button" class="btn btn-secondary">@T("Common.Search.Clear")</button>
            </div>
        </div>
    </section>

    <section class="card mt-2">
        <div class="card-header">
            <span class="card-title">@T("Admin.ContactUs.List.Title")</span>
        </div>
        <div class="card-body">
            @{
                var gridModel = new DataTablesModel
                {
                    Name = "contactus-grid",
                    SearchButtonId = "search-contactus-list",
                    UrlRead = new DataUrl("List", "ContactUs", null),
                    Length = Model.PageSize,
                    LengthMenu = Model.AvailablePageSizes,
                    Filters = new List<FilterParameter>()
                    {
                        new FilterParameter(nameof(Model.ContactUsTypeId))
                    }
                };

                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(ContactUsModel.Id))
                {
                    Title = T("ContactUs.Field.FullName").Text,
                    Render = new RenderCustom("renderColumnFullName"),
                });

                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(ContactUsModel.Phone))
                {
                    Title = T("ContactUs.Field.Phone").Text,
                });

                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(ContactUsModel.Email))
                {
                    Title = T("ContactUs.Field.Email").Text,
                    Width = "200",
                });

                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(ContactUsModel.ContactUsType.Title))
                {
                    Title = T("ContactUs.Field.ContactUsType").Text,
                });

                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(ContactUsModel.Id))
                {
                    Title = "",
                    Width = "10",
                    ClassName = LiparColumnClassDefaults.Button,
                    Render = new RenderButtonView(new DataUrl("View"))
                });

                @await Html.PartialAsync("Table", gridModel)

                <script>
                    function renderColumnFullName(data, type, row, meta) {
                        return `${row.FirstName} ${row.LastName}`;
                    }
                </script>
            }
        </div>
    </section>
</form>

<script>
    $(document).ready(() => {
        $('#search-clear-list').click((e) => {
            $('#@Html.IdFor(c=>c.ContactUsTypeId)').val(0);
            $('#search-contactus-list').click();
        });
    })
</script>